{"version":3,"sources":["components/Products.js","components/Discount.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Products","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clickHandler","bind","assertThisInitialized","e","addToCart","_this2","products","react_default","a","createElement","className","map","product","key","id","name","price","toFixed","onClick","Component","Cart","discounts","discountSettings","htmlFor","fixed","type","value","onChange","setDiscount","percent","console","log","cart","cartItems","item","min","max","quantity","updateQuantity","removeCartItem","subtotal","components_Discount","total","App","state","discount","productList","getTotal","updatedCart","clickedId","parseInt","target","addedProduct","find","alreadySelected","concat","toConsumableArray","setState","objectSpread","_this$state$cart","length","reduce","acc","cv","_this3","itemToRemove","filter","_this4","_this5","quant","updatedCartItems","src_components_Products","src_components_Cart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.130b5970.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Products.css';\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    clickHandler(e) {\r\n        this.props.addToCart(e);\r\n    }\r\n\r\n    render() {\r\n        const { products } = this.props;\r\n\r\n\r\n        return(\r\n            <div className=\"Products\">\r\n                <h1>Produktauswahl</h1>\r\n                {products && products.map(product => {\r\n                    return (\r\n                        <div\r\n                            className=\"product\"\r\n                            key={product.id}\r\n                        >\r\n                            <p>{product.name}</p>\r\n                            <p>{product.price.toFixed(2)} €</p>\r\n                            <div className=\"add-to-cart-button\">\r\n                                <i id={product.id} onClick={this.clickHandler} className=\"fas fa-shopping-cart\"></i>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Products;\r\n","import React, { Component } from 'react';\r\nimport './Discount.css';\r\nimport discountSettings from '../discountSettings.json';\r\n\r\nclass Cart extends Component {\r\n\r\n\r\n    render() {\r\n        const { discounts } = discountSettings;\r\n        return (\r\n                <div className=\"Discount\">\r\n                <form>\r\n                    <fieldset>\r\n                    <legend>Bitte wählen Sie Ihren Rabatt:</legend>\r\n                    <div className=\"radio-buttons\">\r\n                    <label className=\"radio-container\" htmlFor=\"discount-fixed\">{discounts.fixed} Euro Rabatt\r\n                        <input type=\"radio\" id=\"discount-fixed\" name=\"discount\" value=\"fixed\" onChange={this.props.setDiscount}>\r\n                        </input>\r\n                        <span className=\"checkmark\"></span>\r\n                    </label>\r\n\r\n\r\n                      <label className=\"radio-container\" htmlFor=\"discount-percent\">{discounts.percent * 100}% Rabatt\r\n                      <input type=\"radio\" id=\"discount-percent\" name=\"discount\" value=\"percent\" onChange={this.props.setDiscount}>\r\n                      </input>\r\n                      <span className=\"checkmark\"></span>\r\n                      </label>\r\n                    </div>\r\n                    </fieldset>\r\n                </form>\r\n                </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Cart;\r\n","import React, { Component } from 'react';\r\nimport Discount from './Discount';\r\nimport './Cart.css';\r\n\r\nclass Cart extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('props in cart', this.props);\r\n    }\r\n\r\n    render() {\r\n        const { cart } = this.props;\r\n\r\n        if (!cart.cartItems[0]) {\r\n            return(\r\n                <div className=\"Cart\">\r\n                    <h1>Warenkorb</h1>\r\n                    <p>Der Warenkorb ist leer.</p>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"Cart\">\r\n                <h1>Warenkorb</h1>\r\n                {cart && cart.cartItems.map(item => {\r\n                    return (\r\n                    <div key={item.id} className=\"cart-item\">\r\n                        <div>{item.name}</div>\r\n                        <div className=\"cart-item-quantity\">\r\n                            <input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            max=\"99\"\r\n                            id={item.id}\r\n                            value={item.quantity}\r\n                            onChange={this.props.updateQuantity}>\r\n                            </input>\r\n                            <div className=\"remove-item\">\r\n                                <i className=\"fas fa-trash\" onClick={this.props.removeCartItem} id={item.id}></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>);\r\n                })}\r\n                {cart.subtotal && <div className=\"discount\">\r\n                        <Discount setDiscount={this.props.setDiscount}/>\r\n                        <div className=\"item-subtotal\">Zwischensumme: {cart.subtotal.toFixed(2)} €</div>\r\n                        <div className=\"item-subtotal\">Rabatt: {((cart.total - cart.subtotal) || 0 ).toFixed(2)} €</div>\r\n                        <div className=\"item-total\">Gesamt: {(cart.total || cart.subtotal).toFixed(2)} €</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Cart;\r\n","import React, { Component } from 'react';\nimport Products from './components/Products';\nimport Cart from './components/Cart';\nimport productList from './productList.json';\nimport discountSettings from './discountSettings.json'\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cart: {\n                cartItems: [],\n                discount: 0,\n                subtotal: null,\n                total: null\n            },\n            products: productList.products,\n        };\n\n        this.addToCart = this.addToCart.bind(this);\n        this.getTotal = this.getTotal.bind(this);\n        this.removeCartItem = this.removeCartItem.bind(this);\n        this.setDiscount = this.setDiscount.bind(this);\n        this.updateQuantity = this.updateQuantity.bind(this);\n    }\n\n\n    componentDidMount() {\n        console.log(discountSettings.discounts.percent);\n    }\n\n    componentDidUpdate() {\n        console.log('updated State', this.state);\n    }\n\n    addToCart(e) {\n        const clickedId = parseInt(e.target.id);\n        const { cartItems } = this.state.cart;\n\n        const addedProduct =\n        this.state.products.find(item => item.id === clickedId);\n\n        const alreadySelected = cartItems.find(item => item.id === addedProduct.id);\n\n        let updatedCart;\n\n        // if item is not yet in cart, assign quantity 1\n        if (!alreadySelected) {\n            addedProduct.quantity = 1;\n            updatedCart = [...cartItems, addedProduct];\n\n            this.setState({\n                cart: {...this.state.cart, cartItems: updatedCart}\n            });\n        // if item already in cart, increase quantity by 1\n        } else {\n            updatedCart = cartItems.map(item => {\n                if (item.id === alreadySelected.id) {\n                    item.quantity++;\n                }\n                return item;\n            });\n\n        }\n\n\n        this.setState({\n            cart: {\n                ...this.state.cart,\n                cartItems: updatedCart\n            }\n        // callback after updating state to get the new sum total\n        }, () => {\n            this.getTotal()\n        });\n\n    }\n\n    getTotal() {\n        const { cartItems, discount } = this.state.cart;\n        // multiplying price and quantity for each item using map\n        // then adding up using reduce to get subtotal\n        let subtotal;\n        if (cartItems.length) {\n            subtotal = cartItems.map(\n                item => item.price * item.quantity).reduce(\n                    (acc, cv) => acc + cv );\n        } else {\n            subtotal = null;\n        }\n\n\n        // calculate total with fixed or percentage discount\n        const { discounts } = discountSettings;\n        let total;\n\n        if (discount === 'fixed') {\n            total = subtotal - discounts.fixed;\n        } else if (discount === 'percent') {\n            total = (1 - discounts.percent) * subtotal;\n        }\n\n        this.setState({\n            ...this.state,\n            cart: {\n                ...this.state.cart,\n                subtotal,\n                total\n            }\n        })\n    }\n\n    removeCartItem(e) {\n        const clickedId = parseInt(e.target.id);\n        console.log(clickedId);\n\n        const { cartItems } = this.state.cart;\n\n        const itemToRemove =\n        cartItems.find(item => item.id === clickedId);\n\n        console.log(itemToRemove);\n\n        const updatedCart = cartItems.filter(item => {\n            return item.id !== clickedId\n        });\n\n            this.setState({\n                ...this.state,\n                cart: {\n                    ...this.state.cart,\n                    cartItems: updatedCart\n                }\n            }, () => {\n                this.getTotal();\n            });\n\n    }\n\n    setDiscount(e) {\n        console.log('inside setDiscount', e.target.value);\n        let discount;\n        if (e.target.value === \"fixed\") {\n            discount = 'fixed';\n        }\n\n        if (e.target.value === \"percent\") {\n            discount = 'percent';\n        }\n\n        this.setState({\n            ...this.state,\n            cart: {\n                ...this.state.cart,\n                discount\n            }\n        }, () => {\n            this.getTotal();\n        });\n\n    }\n\n    updateQuantity(e) {\n        // update item quantity on user input\n        const clickedId = parseInt(e.target.id);\n        const quant = parseInt(e.target.value);\n        const { cartItems } = this.state.cart;\n\n        if (quant > 0) {\n            const updatedCartItems = cartItems.map(item => {\n                if (item.id === clickedId) {\n                    item.quantity = e.target.value;\n                }\n                return item;\n            });\n\n            this.setState({\n                ...this.state,\n                cart: {\n                    ...this.state.cart,\n                    cartItems: updatedCartItems\n                    }\n            }, () => {\n                this.getTotal()\n            });\n        }\n\n    }\n\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <Products products={this.state.products} addToCart={this.addToCart}/>\n\n        <Cart cart={this.state.cart} subtotal={this.state.subtotal}\n        removeCartItem={this.removeCartItem}\n        updateQuantity={this.updateQuantity} setDiscount={this.setDiscount}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}